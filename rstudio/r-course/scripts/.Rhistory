housing.z <- scale(housing, center = TRUE, scale = TRUE)
housing.none <- scale(housing, center = FALSE, scale = FALSE)
View(housing.none)
View(housing)
housing.mean <- scale(housing, center = TRUE, scale = FALSE)
View(housing.mean)
View(housing.mean)
housing.sd <- scale(housing, center = FALSE, scale = TRUE)
View(housing.sd)
scale.many = function(dataframe, cols) {
names <- names(dataframe)
for (col in cols) {
name <- paste(names[col], "z", sep = ".")
dataframe[name] <- scale(dataframe[,col])
}
cat(paste("Hemos normalizado ", length(cols), " variable(s)"))
dataframe
}
scale.many(housing, c(1,3,5:8))
housing <- scale.many(housing, c(1,3,5:8))
View(housing)
students <- read.csv("../data/tema1/data-conversion.csv")
students <- read.csv("../data/tema1/data-conversion.csv")
View(students)
bp <- c(-Inf, 10000, 31000, Inf)
names <- c("Low", "Average", "High")
students$Income.cat <- cut(students$Income, breaks = bp, labels = names)
View(students)
View(students)
students$Income.cat2 <- cut(students$Income, breaks = bp)
View(students)
students$Income.cat3 <- cut(students$Income, breaks = 4, labels = c("Level 1", "Level 2",
"Level 3", "Level 4")
)
View(students)
#dummy variables
students <- read.csv("../data/tema1/data-conversion.csv")
install.packages("dummies")
library(dummies)
View(students)
students.dummy <- dummy.data.frame(students, sep = ".")
View(students.dummy)
names(students.dummy)
View(students.dummy)
dummy(students$State, ".")
dummy(students$State, sep = ".")
dummy.data.frame(students, names = c("State", "Gender"), sep = ".")
housing.data <- read.csv("../data/tema1/housing-with-missing-value.csv", header = TRUE, stringsAsFactors = FALSE)
View(housing.data)
summary(housing.data)
housing.data.1 <- na.omit(housing.data)
summary(housing.data.1)
##Eliminar las NAs de ciertas columnas
drop_na <- c("rad")
##Eliminar las NAs de ciertas columnas
drop_na <- c("rad")
housing.data.2 <- housing.data[
complete.cases(housing.data[,!(names(housing.data))%in% drop_na]),]
summary(housing.data.2)
names(housing.data)
!(names(housing.data))%in% drop_na
##Eliminar toda una columna
housing.data$rad <- NULL
Summary(housing.data)
summary(housing.data)
drops <- c("rad", "ptratio")
housing.data <- read.csv("../data/tema1/housing-with-missing-value.csv", header = TRUE, stringsAsFactors = FALSE)
housing.data.3 <- housing.data[,!(names(housing.data) %in% drops)]
summary(housing.data)
summary(housing.data.3)
install.packages("Hmisc")
library(Hmisc)
housing.data.copy1 <- housing.data
View(housing.data.copy1)
housing.data.copy1$ptratio <- impute(housing.data.copy1$ptratio, mean)
housing.data.copy1$rad <- impute(housing.data.copy1$rad, mean)
summary(housing.data.copy1)
housing.data.copy2$ptratio <- impute(housing.data.copy2$ptratio, median)
housing.data.copy2$rad <- impute(housing.data.copy2$rad, median)
housing.data.copy2$rad <- impute(housing.data.copy2$rad, median)
housing.data.copy2 <- housing.data
housing.data.copy2$ptratio <- impute(housing.data.copy2$ptratio, median)
housing.data.copy2$rad <- impute(housing.data.copy2$rad, median)
summary(housing.data.copy2)
housing.data.copy3 <- housing.data
housing.data.copy3$ptratio <- impute(housing.data.copy3$ptratio, 18)
housing.data.copy3$rad <- impute(housing.data.copy3$rad, 7)
summary(housing.data.3)
install.packages("mice")
library(mice)
md.pattern(housing.data)
md.pattern(housing.data)
library(mice)
md.pattern(housing.data)
install.packages("mice")
install.packages("mice")
library(mice)
install.packages("mice")
md.pattern(housing.data)
library(mice)
md.pattern(housing.data)
install.packages("VIM")
library(VIM)
aggr(housing.data)
aggr(housing.data,
col=c('green', 'red'))
aggr(housing.data,
col=c('green', 'red'),
numbers = TRUE)
aggr(housing.data,
col=c('green', 'red'),
numbers = TRUE,
sortVars = TRUE)
aggr(housing.data,
col=c('green', 'red'),
numbers = TRUE,
sortVars = TRUE,
labels = names(housing.data))
aggr(housing.data,
col=c('green', 'red'),
numbers = TRUE,
sortVars = TRUE,
labels = names(housing.data),
cex.axis = 0.7)
aggr(housing.data,
col=c('green', 'red'),
numbers = TRUE,
sortVars = TRUE,
labels = names(housing.data),
cex.axis = 0.5)
aggr(housing.data,
col=c('green', 'red'),
numbers = TRUE,
sortVars = TRUE,
labels = names(housing.data),
cex.axis = 0.7)
aggr(housing.data,
col=c('green', 'red'),
numbers = TRUE,
sortVars = TRUE,
labels = names(housing.data),
cex.axis = 0.7,
gap = 4)
aggr(housing.data,
col=c('green', 'red'),
numbers = TRUE,
sortVars = TRUE,
labels = names(housing.data),
cex.axis = 0.7,
gap = 3)
aggr(housing.data,
col=c('green', 'red'),
numbers = TRUE,
sortVars = TRUE,
labels = names(housing.data),
cex.axis = 0.7,
gap = 1)
aggr(housing.data,
col=c('green', 'red'),
numbers = TRUE,
sortVars = TRUE,
labels = names(housing.data),
cex.axis = 0.7,
gap = 1,
ylab = c("histograma de NAs", "Patrón")
)
aggr(housing.data,
col=c('green', 'red'),
numbers = TRUE,
sortVars = TRUE,
labels = names(housing.data),
cex.axis = 0.7,
gap = 1,
ylab = c("Histograma de NAs", "Patrón")
)
aggr(housing.data,
col=c('green', 'red'),
numbers = TRUE,
sortVars = TRUE,
labels = names(housing.data),
cex.axis = 0.7,
gap = 1,
ylab = c("Histograma de NAs", "Prueba")
)
aggr(housing.data,
col=c('green', 'red'),
numbers = TRUE,
sortVars = TRUE,
labels = names(housing.data),
cex.axis = 0.7,
gap = 1,
ylab = c("Histograma de NAs", "Prueba")
)
install.packages("VIM")
library(VIM)
aggr(housing.data,
col=c('green', 'red'),
numbers = TRUE,
sortVars = TRUE,
labels = names(housing.data),
cex.axis = 0.7,
gap = 1,
ylab = c("Histograma de NAs", "Prueba")
)
aggr(housing.data,
col=c('green', 'red'),
numbers = TRUE,
sortVars = TRUE,
labels = names(housing.data),
cex.axis = 0.7,
gap = 1,
ylab = c("Histograma de NAs", "Patrón")
)
aggr(housing.data,
col=c('green', 'red'),
numbers = TRUE,
sortVars = TRUE,
labels = names(housing.data),
cex.axis = 0.7,
gap = 1,
ylab = c("Histograma de NAs", "Patrón")
)
library(VIM)
aggr(housing.data,
col=c('green', 'red'),
numbers = TRUE,
sortVars = TRUE,
labels = names(housing.data),
cex.axis = 0.7,
gap = 1,
ylab = c("Histograma de NAs", "Patrón")
)
aggr(housing.data,
col=c('green', 'red'),
numbers = TRUE,
sortVars = TRUE,
labels = names(housing.data),
cex.axis = 0.7,
gap = 1,
ylab = c("Histograma de NAs", "Patrón")
)
install.packages("tidyr")
library(tidyr)
crime.data <- read.csv("../data/tema1/USArrests.csv", stringsAsFactors = FALSE)
View(crime.data)
View(crime.data)
crime.data <- cbind(state = rownames(crime.data), crime.data)
View(crime.data)
crime.data.1 <- gather(crime.data,key = "crime_type", value = "arrest_estimate")
crime.data.1 <- gather(crime.data,key = "crime_type", value = "arrest_estimate",
Murder : UrbanPop)
View(crime.data.1)
crime.data.2 <- gather(crime.data,
key = "crime_type",
value = "arrest_estimate",
-state)
View(crime.data.2)
crime.data.3 <- gather(crime.data,
key = "crime_type",
value = "arrest_estimate",
Murder, Assault)
View(crime.data.3)
crime.data.4 <- spread(crime.data.2,
key = "crime_type",
value = "arrest_estimate")
View(crime.data.4)
crime.data.5 <- unite(crime.data,
col = "Murder_Assault",
Murder, Assault,
sep = "_")
View(crime.data.5)
crime.data.6 <- separate(crime.data.5,
col = "Murder_Assault",
into = c("Murder","Assault"),
sep = "_")
View(crime.data.6)
library(mice)
housing.data <- read.csv("../data/tema1/housing-with-missing-value.csv",
header = TRUE,
stringsAsFactors = FALSE)
housing.data <- read.csv("../data/tema1/housing-with-missing-value.csv",
header = TRUE,
stringsAsFactors = FALSE)
View(housing.data)
columns <- c("ptratio","rad")
imputed_data <- mice(housing.data[,names(housing.data)%in% columns],
m = 5,
maxit = 50,
method = "pmm",
seed = 2018)
View(imputed_data)
View(imputed_data)
summary(imputed_data)
complete.data <- complete(imputed_data)
complete.data <- mice::complete(imputed_data)
View(complete.data)
housing.data$ptratio <- complete.data$ptratio
housing.data$rad <- complete.data$rad
View(housing.data)
anyNA(housing.data)
impute_arg <- aregImpute(ptratio + rad, data = housing.data, n.impute = 5)
library(Hmisc)
impute_arg <- aregImpute(ptratio + rad, data = housing.data, n.impute = 5)
impute_arg <- aregImpute(ptratio + rad, data = housing.data, n.impute = 5)
impute_arg <- aregImpute(~ptratio + rad, data = housing.data, n.impute = 5)
impute_arg
impute_arg <- aregImpute(~ptratio + rad, data = housing.data, n.impute = 5)
impute_arg
impute_arg$imputed$rad
impute_arg$imputed$rad
impute_arg$imputed$ptratio
impute_arg <- aregImpute(~ptratio + rad, data = housing.data, n.impute = 5)
impute_arg$imputed$ptratio
ozone.data <- read.csv("../data/tema1/ozone.csv", stringsAsFactors = FALSE)
ozone.data <- read.csv("../data/tema1/ozone.csv", stringsAsFactors = FALSE)
View(ozone.data)
outlier_values <- boxplot(ozone.data$pressure_height)$out
boxplot(ozone.data$pressure_height,
main = "Pressure Height",
boxwex = 0.1)
boxplot(ozone.data$pressure_height,
main = "Pressure Height",
boxwex = 0.5)
summary(ozone.data$pressure_height)
boxplot(pressure_height ~ Month, data = ozone.data,
main = "Presure Height per Month")
boxplot(ozone_reading ~Month,
data = ozone.data,
main = "Ozone reading per Month")
boxplot(ozone_reading ~Month,
data = ozone.data,
main = "Ozone reading per Month")$out
boxplot(ozone.data$pressure_height,
main = "Pressure Height",
boxwex = 0.5)$out
summary(ozone.data$pressure_height)
mtext("Hola")
boxplot(ozone_reading ~Month,
data = ozone.data,
main = "Ozone reading per Month")
View(ozone.data)
x[x>quantile[2]] <- median(x, na.rm = removeNA)
x[x<quantile[1]] <- mean(x, na.rm = removeNA)
impute_outliers <- function(x, removeNA = TRUE) {
quantiles <- quantile(x, c(0.05, 0.95), na.rm = removeNA)
x[x<quantile[1]] <- mean(x, na.rm = removeNA)
x[x>quantile[2]] <- median(x, na.rm = removeNA)
}
x[x>quantiles[2]] <- median(x, na.rm = removeNA)
impute_outliers <- function(x, removeNA = TRUE) {
quantiles <- quantile(x, c(0.05, 0.95), na.rm = removeNA)
x[x<quantiles[1]] <- mean(x, na.rm = removeNA)
x[x>quantiles[2]] <- median(x, na.rm = removeNA)
}
imputed_data <- impute_outliers(ozone.data$pressure_height)
par(mfrow = c(1,2))
boxplot(ozone.data$pressure_height, main = "Presión con outliers")
impute_outliers <- function(x, removeNA = TRUE) {
quantiles <- quantile(x, c(0.05, 0.95), na.rm = removeNA)
x[x<quantiles[1]] <- mean(x, na.rm = removeNA)
x[x>quantiles[2]] <- median(x, na.rm = removeNA)
x
}
imputed_data <- impute_outliers(ozone.data$pressure_height)
boxplot(ozone.data$pressure_height, main = "Presión con outliers")
par(mfrow = c(1,2))
boxplot(ozone.data$pressure_height, main = "Presión con outliers")
boxplot(imputed_data, main = "Presión sin outliers")
replace_outliers <- function(x, removeNA = TRUE) {
qrts <- quantile(x, probs = c(0.25, 0.75), na.rm = removeNA)
caps <- quantile(x, probs = x(.05, .95), na.rm = removeNA)
iqr <- qrts[2]-qrts[1]
h <- 1.5 * iqr
x[x < qrts[1]-h] <- caps[1]
x[x > qrts[2]+h] <- caps[2]
x
}
par(mfrow = c(1,2))
replace_outliers <- function(x, removeNA = TRUE) {
qrts <- quantile(x, probs = c(0.25, 0.75), na.rm = removeNA)
caps <- quantile(x, probs = c(.05, .95), na.rm = removeNA)
iqr <- qrts[2]-qrts[1]
h <- 1.5 * iqr
x[x < qrts[1]-h] <- caps[1]
x[x > qrts[2]+h] <- caps[2]
x
}
capped_pressure_height <- replace_outliers(ozone.data$pressure_height)
par(mfrow = c(1,2))
boxplot(ozone.data$pressure_height, main = "Presión con outliers")
boxplot(capped_pressure_height, main = "Presion sin outliers")
data <- read.csv("../data/tema2/auto-mpg.csv",
header = TRUE,
stringsAsFactors = FALSE)
data <- read.csv("../data/tema2/auto-mpg.csv",
header = TRUE,
stringsAsFactors = FALSE)
View(data)
View(data)
View(data)
data$cylinders <- factor(data$cylinders,
level = c(3,4,5,6,8),
labels = c("3cil", "4cil", "5cil", "6cil", "8cil"))
View(data)
summary(data)
str(data)
View(data)
summary(data$cylinders)
summary(data$mpg)
str(data$cylinders)
View(data)
install.packages(c("modeest","raster","moments"))
library(modeest)
library(raster)
library(moments)
mean(X)
X = data$mpg
mean(X)
sum(X)/length(X)
median(X)
moda(X)
mfv(X)  #moda
library(raster) #quantiles, cv
library(moments) # asimetria, curtosis
library(modeest) #moda
mfv(X)  #moda
mfv(X)
install.packages(c("modeest","raster","moments"))
install.packages(c("modeest", "raster", "moments"))
library(modeest) #moda
mfv(X)
library(modeest) #moda
install.packages(c("modeest","raster","moments"))
library(modeest) #moda
install.packages("genefilter")
library(modeest) #moda
install.packages("BiocManager")
library(BiocManager)
BiocManager::install("genefilter")
library(modeest) #moda
library(raster) #quantiles, cv
library(moments) # asimetria, curtosis
mfv(X)
X = data$mpg
mean(X) #sum(X)/length(X)
median(X)
mfv(X)
median(X)
quantile(X)
### Medidas de Dispersión
var(X)
sd(X)
cv(X)
sd(X)/mean(X)
### Medidas de asimetria
skewness(X)
kurtosis(X)
hist(X)
par(mfrow = c(1,1))
hist(X)
str(data)
summary(data)
data <- read.csv("../data/tema2/auto-mpg.csv", stringsAsFactors = F)
View(data)
View(data)
#Index by position
data[1:5,8:9]
data[1:5,c(8,9)]
#Index by Name
data[1:5, c("model_year","car_name")]
##Min / Max de mpg
data[data$mpg == max(data$mpg) | data$mpg == min(data$mpg),]
#Filtros con condiciones
data[data$mpg > 30 & data$cylinders == 6,]
#Filtros con condiciones
data[data$mpg > 30 & data$cylinders == 6, c("car_name", "mpg")]
data[data$mpg > 30 & data$cyl == 6, c("car_name", "mpg")]
#subset
subset(data, mpg > 30 & cylinders == 6)
#subset
subset(data, mpg > 30 & cylinders == 6, select = c("car_name", "mpg"))
##FALLOS A TENER EN CUENTA
data[data$mpg>30]
##FALLOS A TENER EN CUENTA
data[data$mpg>30,]
## Excluir columnas
data[1:5, c(-1,-9)]
data[1:5, -c(1,9)]
data[1:5, -c("No", "car_name")]
data[1:5, !names(data) %in% c("No", "car_name")]
data[1:5, !names(data) %in% c("No", "car_name")] ## Esto si
!names(data)
names(data)
data[data$mpg %in% c(15,20), c("car_name", "mpg")]
data[1:2,c(F,F,T)]
data[1:2,c(F,F,T)]
data[c(F,F,F,F,T),c(F,F,T)]
#split / unsplit
data <- read.csv("../data/tema2/auto-mpg.csv", stringsAsFactors = F)
View(data)
#split / unsplit
data <- read.csv("../data/tema2/auto-mpg.csv", stringsAsFactors = T)
View(data)
#split / unsplit
data <- read.csv("../data/tema2/auto-mpg.csv", stringsAsFactors = F)
carslist <- split(data, data$cylinders)
View(carslist)
carslist[1]
carslist[[1]]
str(carslist[1])
str(carslist[[1]])
names(carslist[[1]])
